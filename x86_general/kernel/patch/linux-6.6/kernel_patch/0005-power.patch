diff --git a/drivers/power/supply/test_power.c b/drivers/power/supply/test_power.c
index 0d0a77584c5d..7233637d87a1 100644
--- a/drivers/power/supply/test_power.c
+++ b/drivers/power/supply/test_power.c
@@ -27,11 +27,11 @@ enum test_power_id {
 
 static int ac_online			= 1;
 static int usb_online			= 1;
-static int battery_status		= POWER_SUPPLY_STATUS_DISCHARGING;
+static int battery_status		= POWER_SUPPLY_STATUS_CHARGING;
 static int battery_health		= POWER_SUPPLY_HEALTH_GOOD;
 static int battery_present		= 1; /* true */
 static int battery_technology		= POWER_SUPPLY_TECHNOLOGY_LION;
-static int battery_capacity		= 50;
+static int battery_capacity		= 100;
 static int battery_voltage		= 3300;
 static int battery_charge_counter	= -1000;
 static int battery_current		= -1600;
@@ -72,7 +72,7 @@ static int test_power_get_battery_property(struct power_supply *psy,
 {
 	switch (psp) {
 	case POWER_SUPPLY_PROP_MODEL_NAME:
-		val->strval = "Test battery";
+		val->strval = "battery";
 		break;
 	case POWER_SUPPLY_PROP_MANUFACTURER:
 		val->strval = "Linux";
@@ -159,28 +159,28 @@ static enum power_supply_property test_power_battery_props[] = {
 };
 
 static char *test_power_ac_supplied_to[] = {
-	"test_battery",
+	"battery",
 };
 
 static struct power_supply *test_power_supplies[TEST_POWER_NUM];
 
 static const struct power_supply_desc test_power_desc[] = {
 	[TEST_AC] = {
-		.name = "test_ac",
+		.name = "ac",
 		.type = POWER_SUPPLY_TYPE_MAINS,
 		.properties = test_power_ac_props,
 		.num_properties = ARRAY_SIZE(test_power_ac_props),
 		.get_property = test_power_get_ac_property,
 	},
 	[TEST_BATTERY] = {
-		.name = "test_battery",
+		.name = "battery",
 		.type = POWER_SUPPLY_TYPE_BATTERY,
 		.properties = test_power_battery_props,
 		.num_properties = ARRAY_SIZE(test_power_battery_props),
 		.get_property = test_power_get_battery_property,
 	},
 	[TEST_USB] = {
-		.name = "test_usb",
+		.name = "usb",
 		.type = POWER_SUPPLY_TYPE_USB,
 		.properties = test_power_ac_props,
 		.num_properties = ARRAY_SIZE(test_power_ac_props),
